
CREATE APPLICATION Retail_app_walmart;

CREATE FLOW Retail_app_walmart_SourceFlow;

CREATE OR REPLACE SOURCE Retail_app_walmart_DBSource USING Global.DatabaseReader ( 
  Username: 'cdcuser', 
  QuiesceOnILCompletion: true, 
  ConnectionURL: 'jdbc:postgresql://******:5432/cdcRetail', 
  adapterName: 'DatabaseReader', 
  Password: 'RjggJcWyhZDAfQvyEksX/w==', 
  DatabaseProviderType: 'Postgres', 
  FetchSize: 10000, 
  Tables: '"public"."order\\_pg\\_with\\_url"', 
  Password_encrypted: 'true' ) 
OUTPUT TO OutputStream;

CREATE CACHE Custcache1 USING Global.FileReader ( 
  positionbyeof: true, 
  wildcard: 'cust_names_60k.csv', 
  rolloverstyle: 'Default', 
  blocksize: 64, 
  skipbom: true, 
  includesubdirectories: false, 
  directory: 'UploadedFiles/sweta_prabha_160' ) 
PARSE USING Global.DSVParser ( 
  header: false,
  rowdelimiter: '\n',
  ignoremultiplerecordbegin: 'true',
  columndelimiter: ',',
  trimquote: true,
  quoteset: '\"',
  columndelimittill: '-1',
  ignoreemptycolumn: false,
  commentcharacter: '',
  ignorerowdelimiterinquote: false,
  headerlineno: 0,
  nocolumndelimiter: false,
  separator: ':',
  linenumber: '-1',
  trimwhitespace: false,
  charset: 'UTF-8',
  blockascompleterecord: false ) 
QUERY ( 
  keytomap: 'custkey',
  skipinvalid: 'false' ) 
OF custEntry;

CREATE WACTIONSTORE WATOPURLS CONTEXT OF ReferralETEntry EVENT TYPES ( sweta_prabha_160.ReferralETEntry KEY ( keyname ) ) USING ( storageProvider: 'elasticsearch' );

CREATE WACTIONSTORE WATOPPRELOYALCUST CONTEXT OF CustETEntry EVENT TYPES ( sweta_prabha_160.CustETEntry KEY ( custkey ) ) USING ( storageProvider: 'elasticsearch' );

CREATE WACTIONSTORE WATOPCUST CONTEXT OF CustETEntry EVENT TYPES ( sweta_prabha_160.CustETEntry KEY ( countyID ) ) USING ( storageProvider: 'elasticsearch' );

CREATE WACTIONSTORE WATOPCOUNTY CONTEXT OF CountyETEntry EVENT TYPES ( sweta_prabha_160.CountyETEntry KEY ( countyID ) ) USING ( storageProvider: 'elasticsearch' );

CREATE OR REPLACE CQ LineCSVtoData8 
INSERT INTO orderStream9 
SELECT TO_DATE(data[0])as order_Date, 
		TO_LONG(data[1]) as orderKey, 
		TO_LONG(data[2]) as custKey, 
		TO_LONG(data[2])/1000 as countyID, 
		TO_LONG(data[4]) as orderAmount, 
		TO_STRING(data[5]) as reflink, 
		c.custname as custname 
		FROM OutputStream, 
		Custcache1 c 
		where TO_LONG(data[4]) > 1000 
		and TO_LONG(data[2]) = c.custkey
		LIMIT 10000;;

CREATE CQ TopCounty 
INSERT INTO WATOPCUST 
select od, custkey, custname, countyId, cnt, max(price) 
from
(Select 
last(order_Date) as od, countyID,custkey, custname, count(*) as cnt, sum(orderAmount) as price
 from OrderWindow1min w 
 group by countyID,custkey
 having count(*) > 0) T
group by T.countyID;

CREATE OR REPLACE JUMPING WINDOW RefWindow1min OVER orderStream9 
KEEP RANGE 1 MINUTE ON order_Date WITHIN 1 MINUTE 
PARTITION BY countyID,reflink;

CREATE OR REPLACE JUMPING WINDOW OrderWindow1min OVER orderStream9 
KEEP RANGE 1 MINUTE ON order_Date WITHIN 1 MINUTE 
PARTITION BY countyID;

CREATE CQ TopReferral 
INSERT INTO WATOPURLS 
select last(order_date), countyID, reflink, count(*), countyID.toString()+reflink 
from RefWindow1min
group by countyId, reflink
having count(*) > 0;

CREATE CQ TopCustomer 
INSERT INTO aggregateStream 
Select 
 last(order_date) as orderdate,
 custkey, custname, countyID,count(*) as cnt, sum(orderAmount) as price
 from OrderWindow1min w 
 group by custkey
 having count(*) > 0;

CREATE CQ AggCounty 
INSERT INTO WATOPCOUNTY 
Select 
countyID,count(*) as cnt, sum(orderAmount) as price
 from OrderWindow1min w 
 group by countyID
 having count(*) > 0;

CREATE JUMPING WINDOW CustomerWindowRows OVER aggregateStream 
KEEP 3 ROWS WITHIN 1 MINUTE 
PARTITION BY custkey;

CREATE OR REPLACE CQ PrevLoyalCustomers 
INSERT INTO WATOPPRELOYALCUST 
select 
 last(orderdate),
custkey, custname, countyID,count(*) as cnt, sum(price) as price
 from CustomerWindowRows w
group by custkey;

END FLOW Retail_app_walmart_SourceFlow;

END APPLICATION Retail_app_walmart;

