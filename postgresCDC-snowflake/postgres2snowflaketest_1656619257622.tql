
CREATE APPLICATION postgres2snowflaketest USE EXCEPTIONSTORE TTL : '7d' ;

CREATE FLOW postgres2snowflaketest_SourceFlow;

CREATE SOURCE postgres2snowflaketest_PostgresCDC USING Global.PostgreSQLReader ( 
  Username: 'cdcuser', 
  ConnectionURL: 'jdbc:postgresql://**.*.**:5432/cdcRetail', 
  ReplicationSlotName: 'striim_slot', 
  Password: 'RjggJcWyhZDAfQvyEksX/w==', 
  Password_encrypted: 'true', 
  Tables: '"public"."Retailcdc"', 
  connectionRetryPolicy: 'retryInterval=30, maxRetries=3', 
  FilterTransactionBoundaries: true ) 
OUTPUT TO postgres2snowflaketest_OutputStream;

END FLOW postgres2snowflaketest_SourceFlow;

CREATE TARGET Snowflake_postgres2snowflaketest_Target USING Global.SnowflakeWriter ( 
  password: 'I/2FLiTTRHJOizZLKXdxUw==', 
  tables: '"public"."Retailcdc",PUBLIC.RETAILTABLE1', 
  password_encrypted: 'true', 
  username: 'edward', 
  s3SecretAccessKey: '', 
  azureContainerName: 'striim-snowflake-container', 
  CDDLAction: 'Process', 
  optimizedMerge: 'false', 
  connectionUrl: 'jdbc:snowflake://striim_partner***********:443?warehouse=LOAD_WH&db=RETAILCDC&schema=public', 
  columnDelimiter: '|', 
  s3Region: 'us-west-1', 
  appendOnly: 'false', 
  externalStageType: 'Local', 
  azureAccountAccessKey: '', 
  uploadPolicy: 'eventcount:1000,interval:5s', 
  fileFormatOptions: 'null_if = \"\"', 
  s3BucketName: 'striim-snowflake-bucket' ) 
INPUT FROM postgres2snowflaketest_OutputStream;

END APPLICATION postgres2snowflaketest;

